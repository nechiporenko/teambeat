// Core imports
@import "../bourbon/bourbon";

// Default project variables
$container-padding:25px;
$container-max-width:1200px + 2*$container-padding;
$breakpoint:799px;
$grid-gutter:1.8%;

//colors
$text-color:#58402C;
$primary:#30488F;
$border-color:#e1ddd4;

//fonts
$font-main:'HelveticaNeue-Light';
$font-italic:'HelveticaNeue-LightItalic';
$font-alt-medium:'AvenirNext-Medium';
$font-alt-regular:'AvenirNext-Regular';


//Mixins
@function calculateRem($size) {
  $remSize: $size / $em-base; //bourbon variable (16px);
  @return #{$remSize}rem;
}

@mixin font-size($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}


//ie8 clearfix
//for new browsers, use bourbon clearfix() mixin
@mixin clear-fix(){
    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}



@mixin px-to-rem($property, $values) {
  $font-size: $em-base;
  $px-values: ();
  $rem-values: ();

  @each $value in $values {
    
    @if $value == 0 or $value == 0px {
      $px-values: join($px-values, 0);
      $rem-values: join($rem-values, 0);
    } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {
      $new-rem-value: $value / $font-size;
      $px-values: join($px-values, round($value));
      $rem-values: join($rem-values, #{$new-rem-value}rem);
    } @else if type-of($value) == number and not unitless($value) and (unit($value) == "%") {
      $px-values: join($px-values, #{$value});
      $rem-values: join($rem-values, #{$value});
    } @else if $value == auto {
      $px-values: join($px-values, auto);
      $rem-values: join($rem-values, auto);
    } @else {
      $px-values: join($px-values, round($value * $font-size));
      $rem-values: join($rem-values, #{$value}rem);
    }
  }

  // output the converted rules
  #{$property}: $px-values;
  #{$property}: $rem-values;
}

//Grid Mixins
@mixin grid-container(){
    width: 100%;
    @include px-to-rem(max-width, $container-max-width);
    margin: 0 auto;
    @include px-to-rem(padding, 0 $container-padding);
    box-sizing: border-box;
    @extend .clearfix;
}
